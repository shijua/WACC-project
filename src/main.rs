use chumsky::error::Simple;
use chumsky::prelude::{just, SimpleSpan};
use chumsky::{extra, Parser};

mod ast;
mod parser;

pub type Span = SimpleSpan<usize>;

pub type Spanned<T> = (T, Span);

fn main() {
    let boolean = just::<_, _, extra::Err<Simple<char>>>("true")
        .or(just("false"))
        .from_str::<bool>()
        .unwrapped(); // Cannot panic: the only possible outputs generated by the parser are "true" or "false"

    assert_eq!(boolean.parse("true").into_result(), Ok(true));
    assert_eq!(boolean.parse("false").into_result(), Ok(false));
    // Does not panic, because the original parser only accepts "true" or "false"
    let result = boolean.parse("32");
    assert!(boolean.parse("42").has_errors());
}
