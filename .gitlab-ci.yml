image: "rust:latest"

variables:
  IMAGE_TAG: whack

stages:
  - build
  - test

build-docker-image:
  stage: build
  before_script:
    # Add Docker's official GPG key:
    - sudo apt-get update
    - sudo apt-get install ca-certificates curl gnupg
    - sudo install -m 0755 -d /etc/apt/keyrings
    - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    - sudo chmod a+r /etc/apt/keyrings/docker.gpg

    # Add the repository to Apt sources:
    - echo \
    -   "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
    -   sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    - sudo apt-get update
    - sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
  script:
    - docker stop $IMAGE_TAG || true
    - docker rm $IMAGE_TAG || true
    - docker rmi $IMAGE_TAG || true
    - docker build -t $IMAGE_TAG .
    - docker run -it -d --name $IMAGE_TAG $IMAGE_TAG /bin/bash

unitTest:
  stage: test
  script:
    - docker exec -i $IMAGE_TAG /bin/sh -c "make test"

integrationTest:
  stage: test
  script:
    - docker exec -i $IMAGE_TAG /bin/sh -c "python3 integration_test.py"
